/*
 * Copyright (c) 2021, NVIDIA CORPORATION.  All rights reserved.
 *
 * NVIDIA CORPORATION and its licensors retain all intellectual property
 * and proprietary rights in and to this software, related documentation
 * and any modifications thereto.  Any use, reproduction, disclosure or
 * distribution of this software and related documentation without an express
 * license agreement from NVIDIA CORPORATION is strictly prohibited.
 */


pipeline {
  agent {
    kubernetes {
      yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
    - name: jnlp
      image: urm.nvidia.com/sw-switch-devops-docker/ml-jnlp:1.0.0
      workingDir: /tmp
      securityContext:
        runAsUser: 7331
      volumeMounts:
        - mountPath: /nbu-sws
          name: nbu-sws
          mountPropagation: HostToContainer
          readOnly: false
      resources:
        requests:
          memory: "1Gi"
          cpu: "1"
        limits:
          memory: "2Gi"
          cpu: "2"

    - name: dind
      image: urm.nvidia.com/sw-switch-devops-docker/blossom_dind_gen:1.0.0
      imagePullPolicy: Always
      workingDir: /tmp
      securityContext:
        runAsUser: 7331
      volumeMounts:
        - mountPath: /nbu-sws
          name: nbu-sws
          mountPropagation: HostToContainer
          readOnly: false
      resources:
        requests:
          memory: "6Gi"
          cpu: "8"
        limits:
          memory: "8Gi"
          cpu: "10"
      tty: true
      command: ['cat']
      env:
        - name: DOCKER_HOST
          value: tcp://localhost:2375
    - name: docker-daemon
      image: urm.nvidia.com/sw-switch-devops-docker/blossom_dind_gen:1.0.0
      securityContext:
        privileged: true
      env:
        - name: DOCKER_TLS_CERTDIR
          value: ""
      volumeMounts:
        - mountPath: /nbu-sws
          name: nbu-sws
          mountPropagation: HostToContainer
          readOnly: false
  volumes:
    - name: nbu-sws
      persistentVolumeClaim:
        claimName: nbu-sws-pvc
        readOnly: false
"""
    }
  }

    options {
        timestamps()
    }
    environment {
        GENERIC_CI_GIT_BRANCH = '5.0.3-20'
        JSON_FILE = 'ngci_build/ci/ci_build_configuration.json'
        SKIP_JSON_MERGE = true
        CREDENTIALSID = 'gitlab-user-token'
    }
    stages {
        stage("Main") {
            steps {
              container('dind'){
                script {
                        library changelog: false, identifier: "ci_framework@$GENERIC_CI_GIT_BRANCH"
                        LoadNGCI()
                }
              }

            }
        }

    }
}
